name: ⭐⭐⭐定时新闻抓取、发送邮件并更新状态

on:
  schedule:
    - cron: '0 23 * * *' # 假设每天 UTC 0 0 运行
  workflow_dispatch:

jobs:
  scrape-email-update:
    name: 抓取新闻、发送邮件并更新状态
    runs-on: ubuntu-latest
    permissions:
      contents: write # 需要权限来提交CSV文件的状态更新

    steps:
      - name: 迁出代码库
        uses: actions/checkout@v4

      - name: 设置 Python 环境
        uses: actions/setup-python@v5
        with:
          python-version: '3.10' # 或你脚本需要的版本
          cache: 'pip'

      - name: 安装 Python 依赖项
        run: |
          python -m pip install --upgrade pip
          # 假设你的 requirements.txt 包含 pandas
          # 如果你的抓取脚本也有依赖，确保它们也在 requirements.txt 中
          if [ -f requirements.txt ]; then
            pip install -r requirements.txt
          else
            echo "requirements.txt not found, installing pandas manually for email script."
            pip install pandas # 至少邮件脚本需要pandas
          fi
          # 如果抓取脚本依赖也在此安装
          # pip install requests beautifulsoup4 # 假设是抓取脚本的依赖

      - name: 运行新闻抓取脚本 (scrape_news.py)
        run: python scrape_news.py # 确保路径正确
        # 这个脚本应该会生成或更新 messi_argentina_news.csv

      - name: 运行邮件发送和状态更新脚本 (send_news_email.py)
        env: # 将 GitHub Secrets 作为环境变量传递给 Python 脚本
          MAIL_USERNAME: ${{ secrets.MAIL_USERNAME_SECRET }} # 例如你在Secrets中叫MAIL_USERNAME_SECRET
          MAIL_PASSWORD: ${{ secrets.MAIL_PASSWORD_SECRET }}
          TO_EMAIL: ${{ secrets.TO_EMAIL_SECRET }}
          # 如果 SMTP 服务器和端口也想通过 secrets 配置:
          # SMTP_SERVER_ENV: ${{ secrets.SMTP_SERVER_SECRET_NAME }}
          # SMTP_PORT_ENV: ${{ secrets.SMTP_PORT_SECRET_NAME }}
        run: python send_news_email.py # 确保路径正确

      - name: 配置 Git 用户信息 (如果CSV状态被更新)
        run: |
          git config --global user.name "GitHub Actions Bot"
          git config --global user.email "actions@github.com"

      - name: 提交并推送更新后的 CSV 文件 (如果状态已更新)
        run: |
          # 检查 messi_argentina_news.csv 是否有更改
          # (因为 send_news_email.py 可能会修改它)
          git add messi_argentina_news.csv
          if ! git diff --staged --quiet; then
            echo "检测到 messi_argentina_news.csv (状态更新) 发生变化，正在提交..."
            git commit -m "自动更新：新闻邮件已发送，状态已更新 $(date +'%Y-%m-%d')"
            git push
          else
            echo "messi_argentina_news.csv 文件无变化 (可能未发送邮件或无新状态更新)，无需提交。"
          fi
